Index: src/database/Database.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Vector;\n\nimport wsp.*;\nimport utils.*;\n\npublic final class Database {\n\t\n\tprivate static final Database INSTANCE = new Database();\n\t\n\tprivate Vector<User> users = new Vector<User>();\n\t\n\tprivate Vector<Student> students = new Vector<Student>();\n//\tprivate Vector<Employee> Employees;\n\tprivate static Vector<Course> courses = new Vector<Course>();\n\tprivate Vector<News> news = new Vector<News>();\n\tprivate Vector<Request> requests = new Vector<Request>();\n\tprivate Vector<Order> orders = new Vector<Order>();\n//\tprivate Vector<Log> logs;\n\tprivate Vector<Researcher> researchers = new Vector<Researcher>();\n\tprivate static Vector<Organisation> organisations = new Vector<Organisation>();\n\t\n\tprivate Database() {}\n\t\n\tpublic static Database getInstance() {\n\t\treturn INSTANCE;\n\t}\n\t\n\tpublic static Vector<Course> getCourses() {\n\t\treturn courses;\n\t}\n\n    public static Course getCourse(int i) {\n        return courses.get(i);\n    }\n\n    public void login() {\n\t\t\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tUser authentificatedUser = null;\n\t\t\n\t\tauthentification:\n\t\twhile(true) {\n\t\t\ttry {\n\t\t\t\tSystem.out.println(\"Введите имя пользоваля: \");\n\t\t\t\tString username = reader.readLine();\n\t\t\t\t\n\t\t\t\tSystem.out.println(\"Введите пароль: \");\n\t\t\t\tString password = reader.readLine();\n\t\t\t\tSystem.out.println(username + \" \" + password);\n\t\t\t\t\n\t\t\t\tfor(User u : this.users) {\n\t\t\t\t\tif(u.getUsername().equals(username) && u.getPassword().equals(password)) {\n\t\t\t\t\t\tauthentificatedUser = u;\n\t\t\t\t\t\tbreak authentification;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println(\"Логин или пароль неверные!\");\n\t\t\t\t\n\t\t\t} \n\t\t\tcatch (IOException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tauthentificatedUser.authentification();\n\t\t\n\t}\n\n\n\tpublic void addUser(User u) {\n\t\tthis.users.add(u);\n\t}\n\t\n\tpublic void addStudent(Student s) {\n\t\tthis.students.add(s);\n\t}\n\t\n\tpublic void addCourse(Course c) {\n\t\tthis.courses.add(c);\n\t}\n\t\n\tpublic void addNews(News n) {\n\t\tthis.news.add(n);\n\t}\n\t\n\tpublic void addRequest(Request r) {\n\t\tthis.requests.add(r);\n\t}\n\t\n\tpublic void addOrder(Order o) {\n\t\tthis.orders.add(o);\n\t}\n\t\n\t\n\t\n\tpublic void addResearcher(Researcher r) {\n\t\tthis.researchers.add(r);\n\t}\n\t\n\tpublic static void addOrganisations(Organisation or) {\n\t\torganisations.add(or);\n\t}\n\n\n    public Vector<Organisation> getOrganisations() {\n        return organisations;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/database/Database.java b/src/database/Database.java
--- a/src/database/Database.java	
+++ b/src/database/Database.java	
@@ -20,6 +20,7 @@
 	private Vector<News> news = new Vector<News>();
 	private Vector<Request> requests = new Vector<Request>();
 	private Vector<Order> orders = new Vector<Order>();
+    private Vector<Manager>  managers = new Vector<Manager>();
 //	private Vector<Log> logs;
 	private Vector<Researcher> researchers = new Vector<Researcher>();
 	private static Vector<Organisation> organisations = new Vector<Organisation>();
@@ -79,8 +80,67 @@
 	public void addUser(User u) {
 		this.users.add(u);
 	}
-	
-	public void addStudent(Student s) {
+
+    public Vector<User> getUsers() {
+        return users;
+    }
+
+    public void setUsers(Vector<User> users) {
+        this.users = users;
+    }
+
+    public Vector<Student> getStudents() {
+        return students;
+    }
+
+    public void setStudents(Vector<Student> students) {
+        this.students = students;
+    }
+
+    public static void setCourses(Vector<Course> courses) {
+        Database.courses = courses;
+    }
+
+    public Vector<News> getNews() {
+        return news;
+    }
+
+    public void setNews(Vector<News> news) {
+        this.news = news;
+    }
+
+    public Vector<Request> getRequests() {
+        return requests;
+    }
+
+    public void setRequests(Vector<Request> requests) {
+        this.requests = requests;
+    }
+
+    public Vector<Order> getOrders() {
+        return orders;
+    }
+
+    public void setOrders(Vector<Order> orders) {
+        this.orders = orders;
+    }
+
+    public Vector<Researcher> getResearchers() {
+        return researchers;
+    }
+
+    public void setResearchers(Vector<Researcher> researchers) {
+        this.researchers = researchers;
+    }
+
+    public static void setOrganisations(Vector<Organisation> organisations) {
+        Database.organisations = organisations;
+    }
+    public Vector<Organisation> getOrganisations() {
+        return organisations;
+    }
+
+    public void addStudent(Student s) {
 		this.students.add(s);
 	}
 	
@@ -106,12 +166,10 @@
 		this.researchers.add(r);
 	}
 	
-	public static void addOrganisations(Organisation or) {
-		organisations.add(or);
+	public void addOrganisations(Organisation or) {
+		this.organisations.add(or);
 	}
-
-
-    public Vector<Organisation> getOrganisations() {
-        return organisations;
+    public void addManager(Manager m){
+        this.managers.add(m);
     }
 }
